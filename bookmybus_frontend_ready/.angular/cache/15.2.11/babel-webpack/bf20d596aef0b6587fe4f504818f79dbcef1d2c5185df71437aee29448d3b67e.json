{"ast":null,"code":"import { trigger, state, style, transition, animate, query, stagger, keyframes } from '@angular/animations';\n// Fade in/out animation\nexport const fadeInOut = trigger('fadeInOut', [state('in', style({\n  opacity: 1\n})), state('out', style({\n  opacity: 0\n})), transition('in => out', [animate('300ms ease-in')]), transition('out => in', [animate('300ms ease-out')])]);\n// Slide in from left\nexport const slideInLeft = trigger('slideInLeft', [state('in', style({\n  transform: 'translateX(0)'\n})), transition('void => *', [style({\n  transform: 'translateX(-100%)'\n}), animate('500ms ease-out')])]);\n// Slide in from right\nexport const slideInRight = trigger('slideInRight', [state('in', style({\n  transform: 'translateX(0)'\n})), transition('void => *', [style({\n  transform: 'translateX(100%)'\n}), animate('500ms ease-out')])]);\n// Scale in animation\nexport const scaleIn = trigger('scaleIn', [state('in', style({\n  transform: 'scale(1)'\n})), transition('void => *', [style({\n  transform: 'scale(0)'\n}), animate('300ms ease-out')])]);\n// Card hover animation\nexport const cardHover = trigger('cardHover', [state('normal', style({\n  transform: 'scale(1)'\n})), state('hovered', style({\n  transform: 'scale(1.05)'\n})), transition('normal <=> hovered', animate('200ms ease-in-out'))]);\n// List item stagger animation\nexport const listStagger = trigger('listStagger', [transition('* => *', [query(':enter', [style({\n  opacity: 0,\n  transform: 'translateY(20px)'\n}), stagger('100ms', [animate('400ms ease-out', style({\n  opacity: 1,\n  transform: 'translateY(0)'\n}))])], {\n  optional: true\n})])]);\n// Button click animation\nexport const buttonClick = trigger('buttonClick', [state('normal', style({\n  transform: 'scale(1)'\n})), state('clicked', style({\n  transform: 'scale(0.95)'\n})), transition('normal <=> clicked', animate('100ms ease-in-out'))]);\n// Loading spinner animation\nexport const loadingSpinner = trigger('loadingSpinner', [transition(':enter', [animate('600ms ease-in-out', keyframes([style({\n  transform: 'rotate(0deg)',\n  offset: 0\n}), style({\n  transform: 'rotate(360deg)',\n  offset: 1\n})]))])]);\n// Form field focus animation\nexport const formFieldFocus = trigger('formFieldFocus', [state('unfocused', style({\n  transform: 'scale(1)',\n  'box-shadow': '0 2px 4px rgba(0,0,0,0.1)'\n})), state('focused', style({\n  transform: 'scale(1.02)',\n  'box-shadow': '0 4px 12px rgba(0,123,255,0.3)'\n})), transition('unfocused <=> focused', animate('200ms ease-in-out'))]);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}