{"ast":null,"code":"import { ActivatedRoute, Router } from '@angular/router';\nimport { BookingService } from '../../services/booking.service';\nimport { BusService } from '../../services/bus.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/booking.service\";\nimport * as i3 from \"../../services/bus.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction BookingFormComponent_div_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nfunction BookingFormComponent_div_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.success);\n  }\n}\nfunction BookingFormComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, BookingFormComponent_div_0_div_3_Template, 2, 1, \"div\", 2);\n    i0.ɵɵtemplate(4, BookingFormComponent_div_0_div_4_Template, 2, 1, \"div\", 3);\n    i0.ɵɵelementStart(5, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function BookingFormComponent_div_0_Template_form_ngSubmit_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.book());\n    });\n    i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\");\n    i0.ɵɵtext(8, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_div_0_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\");\n    i0.ɵɵtext(12, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_div_0_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.email = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 5)(15, \"label\");\n    i0.ɵɵtext(16, \"Seats\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_div_0_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.seats = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"button\", 9);\n    i0.ɵɵtext(19, \"Book Now\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Book \", ctx_r0.bus.name, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.error);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.success);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.email);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.seats);\n  }\n}\nexport let BookingFormComponent = /*#__PURE__*/(() => {\n  class BookingFormComponent {\n    constructor(route, bookingService, busService, router) {\n      this.route = route;\n      this.bookingService = bookingService;\n      this.busService = busService;\n      this.router = router;\n      this.name = '';\n      this.email = '';\n      this.seats = 1;\n      this.error = '';\n      this.success = '';\n    }\n    ngOnInit() {\n      const id = Number(this.route.snapshot.paramMap.get('id'));\n      this.busService.getById(id).subscribe(bus => this.bus = bus);\n    }\n    book() {\n      const payload = {\n        busId: this.bus.id,\n        name: this.name,\n        email: this.email,\n        seats: this.seats\n      };\n      this.bookingService.createBooking(payload).subscribe({\n        next: () => {\n          this.success = 'Booking successful!';\n          setTimeout(() => this.router.navigate(['/buses']), 1500);\n        },\n        error: err => {\n          this.error = err.error || 'Booking failed!';\n        }\n      });\n    }\n  }\n  BookingFormComponent.ɵfac = function BookingFormComponent_Factory(t) {\n    return new (t || BookingFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.BookingService), i0.ɵɵdirectiveInject(i3.BusService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n  BookingFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookingFormComponent,\n    selectors: [[\"app-booking-form\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"container mt-4\", 4, \"ngIf\"], [1, \"container\", \"mt-4\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"seats\", \"min\", \"1\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-success\"]],\n    template: function BookingFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, BookingFormComponent_div_0_Template, 20, 6, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.bus);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.MinValidator, i5.NgModel, i5.NgForm],\n    encapsulation: 2\n  });\n  return BookingFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}